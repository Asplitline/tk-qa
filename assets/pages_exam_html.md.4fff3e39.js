import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.8adc4ca2.js";const h=JSON.parse('{"title":"html 笔试题","description":"","frontmatter":{"title":"html 笔试题","order":1},"headers":[],"relativePath":"pages/exam/html.md","lastUpdated":1682091230000}'),t={name:"pages/exam/html.md"},o=l(`<h1 id="html-笔试题" tabindex="-1">html 笔试题 <a class="header-anchor" href="#html-笔试题" aria-label="Permalink to &quot;html 笔试题&quot;">​</a></h1><h2 id="_1-基于以下-html-结构-以下关于-main1-css-和-main2-css-的描述有哪些是正确的" tabindex="-1">1.基于以下 HTML 结构，以下关于 main1.css 和 main2.css 的描述有哪些是正确的？ <a class="header-anchor" href="#_1-基于以下-html-结构-以下关于-main1-css-和-main2-css-的描述有哪些是正确的" aria-label="Permalink to &quot;1.基于以下 HTML 结构，以下关于 main1.css 和 main2.css 的描述有哪些是正确的？&quot;">​</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main1.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">main2.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>A. main1.css 和 main2.css 同时开始加载，先加载完成的优先解析</p><p>B. 如果 main1.css 和 main2.css 中有相同的选择器规则，那么 main2.css 中的规则将合并 main1.css 的规则</p><p>C. main2.css 只有在 main1.css 加载并解析后，才开始加载</p><p>D. 如果 main1.css 和 main2.css 中有相同的选择器规则，那么 main2.css 中的规则将被忽略</p><details class="details-block"><summary>答案</summary><p>答案：AB</p><p>解析：link会同时加载，而@import会等到页面加载完毕后才加载</p></details>`,8),p=[o];function e(c,r,i,D,m,F){return n(),a("div",null,p)}const d=s(t,[["render",e]]);export{h as __pageData,d as default};
