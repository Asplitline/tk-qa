import{_ as e,c as o,o as a,Q as n}from"./chunks/framework.8adc4ca2.js";const m=JSON.parse('{"title":"css","description":"","frontmatter":{"title":"css","order":3},"headers":[],"relativePath":"pages/qa/fe/css.md","lastUpdated":1681459433000}'),i={name:"pages/qa/fe/css.md"},l=n(`<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><h2 id="基础类" tabindex="-1">基础类 <a class="header-anchor" href="#基础类" aria-label="Permalink to &quot;基础类&quot;">​</a></h2><h3 id="block-和-inline-的区别" tabindex="-1">block 和 inline 的区别？ <a class="header-anchor" href="#block-和-inline-的区别" aria-label="Permalink to &quot;block 和 inline 的区别？&quot;">​</a></h3><p><strong>block：</strong> 独占一行，可设置宽高、margin、padding</p><p><strong>inline：</strong> 不独占一行，不可设置宽高，可设置水平 margin、padding 但不能设置垂直方向 margin、padding</p><h3 id="隐藏元素的方式" tabindex="-1">隐藏元素的方式 <a class="header-anchor" href="#隐藏元素的方式" aria-label="Permalink to &quot;隐藏元素的方式&quot;">​</a></h3><p><strong>display：none</strong> 直接消失</p><p><strong>visibility：hidden</strong> 不可见，但占着位置</p><p><strong>opacity：0</strong> 透明不可见，但占着位置</p><p><strong>position：absolute</strong> 绝对定位并移出可见范围</p><p><strong>z-index：-999</strong> 将层级设置在底部，让他不可见</p><h3 id="link-和-import-区别" tabindex="-1">link 和@import 区别 <a class="header-anchor" href="#link-和-import-区别" aria-label="Permalink to &quot;link 和@import 区别&quot;">​</a></h3><ul><li>link 可以加载 css、rss；@import 只能加载 css</li><li>link 在页面载入时同时加载；@import 在页面载入后再加载</li><li>link 无兼容问题；@import 是新语法，低版本浏览器不兼容</li><li>link 标签可被 js 操作 dom 去除；@import 不行</li></ul><h3 id="transition-和-animation-的区别" tabindex="-1">transition 和 animation 的区别 <a class="header-anchor" href="#transition-和-animation-的区别" aria-label="Permalink to &quot;transition 和 animation 的区别&quot;">​</a></h3><p><strong>transition：</strong> 过度样式，需要被动触发</p><p><strong>animation：</strong> 动画样式，不需要被动触发，可以自动触发，可结合@keyframe 进行多个关键帧的动画</p><h3 id="伪元素和伪类" tabindex="-1">伪元素和伪类 <a class="header-anchor" href="#伪元素和伪类" aria-label="Permalink to &quot;伪元素和伪类&quot;">​</a></h3><p><strong>伪元素：</strong> 生成一些不存在的元素，并且可以在这些虚拟元素上应用样式。语法是在选择器后添加两个冒号和伪元素名称，例如 <code>::before</code>、<code>::after</code> 等。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">::before</span></span>
<span class="line"><span style="color:#A6ACCD;">::after</span></span>
<span class="line"><span style="color:#A6ACCD;">::first-letter</span></span>
<span class="line"><span style="color:#A6ACCD;">::first-line</span></span>
<span class="line"><span style="color:#A6ACCD;">::selection</span></span>
<span class="line"><span style="color:#A6ACCD;">::placeholder</span></span></code></pre></div><p><strong>伪类：</strong> 选择元素的特殊状态或位置，它的语法是在选择器后添加一个冒号和伪类名称，例如 <code>:hover</code>、<code>:focus</code> 等</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">:hover</span></span>
<span class="line"><span style="color:#A6ACCD;">:active</span></span>
<span class="line"><span style="color:#A6ACCD;">:focus</span></span>
<span class="line"><span style="color:#A6ACCD;">:visited</span></span>
<span class="line"><span style="color:#A6ACCD;">:first-child</span></span>
<span class="line"><span style="color:#A6ACCD;">:last-child</span></span>
<span class="line"><span style="color:#A6ACCD;">:nth-child(n)</span></span>
<span class="line"><span style="color:#A6ACCD;">:not(selector)</span></span>
<span class="line"><span style="color:#A6ACCD;">:disabled</span></span>
<span class="line"><span style="color:#A6ACCD;">:checked</span></span></code></pre></div><h3 id="盒模型" tabindex="-1">盒模型 <a class="header-anchor" href="#盒模型" aria-label="Permalink to &quot;盒模型&quot;">​</a></h3><p><strong>标准盒模型：</strong> width、height 的计算范围只包含 content</p><p><strong>IE 盒模型：</strong> width、height 的计算范围包含 content、padding、border</p><p><strong>box-sizing: content-box</strong> 标准盒模型（默认）</p><p><strong>box-sizing: border-box</strong> IE 盒模型（怪异盒模型）</p><h3 id="css3-新样式" tabindex="-1">CSS3 新样式 <a class="header-anchor" href="#css3-新样式" aria-label="Permalink to &quot;CSS3 新样式&quot;">​</a></h3><ol><li>边框和背景：<code>border-radius</code>、<code>box-shadow</code>、<code>background-size</code>、<code>linear-gradient</code>、<code>radial-gradient</code>等。</li><li>文字排版：<code>text-shadow</code>、<code>word-wrap</code>、<code>word-break</code>、<code>text-overflow</code>等。</li><li>盒子模型：<code>box-sizing</code>、<code>background-clip</code>、<code>background-origin</code>等。</li><li>变形与动画：<code>transform</code>、<code>transition</code>、<code>animation</code>、<code>perspective</code>等。</li><li>选择器：<code>[attribute]</code>、<code>:checked</code>、<code>:not()</code>、<code>::before</code>、<code>::after</code>等。</li><li>布局与弹性盒子：<code>column-count</code>、<code>column-gap</code>、<code>flex</code>、<code>flex-direction</code>等。</li><li>字体：<code>@font-face</code>、<code>font-feature-settings</code>、<code>text-rendering</code>等。</li><li>媒体查询：<code>@media</code>、<code>min-width</code>、<code>max-width</code>、<code>orientation</code>等。</li><li>其他：<code>cal()，var()</code></li></ol><h3 id="flex-1-代表什么" tabindex="-1">flex：1 代表什么？ <a class="header-anchor" href="#flex-1-代表什么" aria-label="Permalink to &quot;flex：1 代表什么？&quot;">​</a></h3><p>flex: 1 1 auto</p><p>分别是 <code>flex-grow、flex-shrink、flex-basis</code></p><h3 id="css-常见单位" tabindex="-1">CSS 常见单位 <a class="header-anchor" href="#css-常见单位" aria-label="Permalink to &quot;CSS 常见单位&quot;">​</a></h3><p>像素（<code>px</code>）：像素是最常用的单位，也是 Web 开发中默认的单位。像素可以根据设备分辨率的不同而自适应。</p><p>百分比（<code>%</code>）：百分比是相对于父元素的宽度或高度的单位。例如，设置一个元素的宽度为 50%将使该元素占父元素宽度的 50%。</p><p><code>em</code>：em 是相对单位，它是相对于当前元素的字体大小。例如，如果一个元素的字体大小为 16 像素，设置它的宽度为 2em 将使该元素的宽度为 32 像素（16 x 2）。</p><p><code>rem</code>：rem 也是相对单位，它是相对于根元素（即<code>&lt;html&gt;</code>元素）的字体大小。因此，rem 更适用于响应式设计，它可以根据不同的屏幕尺寸自动调整大小。</p><p><code>vw和vh</code>：vw 和 vh 是相对于视窗宽度和高度的单位。例如，设置一个元素的宽度为 50vw 将使该元素占视窗宽度的 50%。</p><h3 id="css-提升性能方式" tabindex="-1">CSS 提升性能方式 <a class="header-anchor" href="#css-提升性能方式" aria-label="Permalink to &quot;CSS 提升性能方式&quot;">​</a></h3><ol><li>减少选择器的复杂度和嵌套层级，避免使用通配符和标签选择器，使用类选择器和 ID 选择器。</li><li>合并 CSS 文件，减少 HTTP 请求次数。</li><li>尽可能使用 CSS Sprites（CSS 雪碧图）来减少图像 HTTP 请求。</li><li>压缩 CSS 文件，减小文件大小。</li><li>通过使用缓存来减少页面的加载时间。</li><li>避免在 CSS 中使用表达式和!important，它们会影响页面渲染速度。</li><li>避免在样式中使用长的和复杂的属性值，这会影响解析和渲染的速度。</li><li>避免使用响应式图片，可以通过在服务器端根据设备类型动态生成适当的图片大小，减少浏览器端的计算。</li><li>避免使用过度的动画效果，它们会影响页面的性能和交互体验。</li></ol><h3 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-label="Permalink to &quot;BFC&quot;">​</a></h3><p><code>BFC</code>是 CSS 中的一种渲染机制，它的全称是<code>Block Formatting Context</code>（块级格式化上下文）。BFC 的作用是提供一个独立的渲染环境，可以避免一些常见的布局问题，并且在一些特殊的情况下能够改变元素的渲染行为。</p><p>BFC 可以通过以下方式触发：</p><ol><li>根元素（<code>html</code>）</li><li>浮动元素（<code>float</code>属性不为 none）</li><li>绝对定位元素（<code>position</code>为 absolute 或 fixed）</li><li>display 属性值为<code>inline-block、table-cell、table-caption、flex、inline-flex、grid、inline-grid</code>的元素</li><li>overflow 属性值不为 visible 的元素（<code>overflow: hidden/scroll/auto</code>）</li></ol><p>当一个元素形成了 BFC 之后，它的渲染规则会发生一些变化，包括但不限于：</p><ol><li>BFC 元素会在<strong>垂直方向上</strong>形成一个独立的渲染区域，内部的元素会一个接一个地排列。</li><li>BFC 元素的<strong>高度包含内部元素的高度，即使这些元素浮动也不例外</strong></li><li>BFC 元素的外边距<strong>不会与相邻块级元素的外边距合并</strong>。</li><li>BFC 元素可以包含浮动元素，并且会完整地<strong>包裹浮动元素</strong>。</li><li>BFC 元素可以<strong>防止内部元素的文本环绕浮动元素</strong>的现象。</li></ol><h2 id="对比类" tabindex="-1">对比类 <a class="header-anchor" href="#对比类" aria-label="Permalink to &quot;对比类&quot;">​</a></h2><p>块级元素和行内元素的区别</p><h2 id="实战类" tabindex="-1">实战类 <a class="header-anchor" href="#实战类" aria-label="Permalink to &quot;实战类&quot;">​</a></h2><p>img 是否遇到底部 3px 的问题</p><h3 id="垂直水平居中" tabindex="-1">垂直水平居中 <a class="header-anchor" href="#垂直水平居中" aria-label="Permalink to &quot;垂直水平居中&quot;">​</a></h3><h3 id="画三角形" tabindex="-1">画三角形 <a class="header-anchor" href="#画三角形" aria-label="Permalink to &quot;画三角形&quot;">​</a></h3><h3 id="聊天气泡加阴影" tabindex="-1">聊天气泡加阴影 <a class="header-anchor" href="#聊天气泡加阴影" aria-label="Permalink to &quot;聊天气泡加阴影&quot;">​</a></h3>`,52),s=[l];function t(c,r,d,p,h,g){return a(),o("div",null,s)}const u=e(i,[["render",t]]);export{m as __pageData,u as default};
